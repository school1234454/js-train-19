// 1. Створення базового об'єкту "Book":
/*
 * Об'єкт: Book
 * Властивості:
 * ----------------------------------
 * | Властивість | Значення         |
 * |-------------|------------------|
 * | title       | "Загальна Книга" |
 * | author      | "Анонім"         |
 * | pages       | 0                |
 *
 * Функції:
 * ------------------------------------------------------------------------
 * | Функція    | Опис                                                    |
 * -----------------------------------------------------------------------
 * | read()     | Виводить повідомлення "Ви читаєте <title> від <author>" |
 */

// Створюємо об'єкт Book
{
  const Book = {
    title: "Загальна Книга",
    author: "Анонім",
    pages: 0,
    read: function () {
      console.log(`Ви читаєте ${this.title} від ${this.author}`);
    },
  };

  console.log("Завдання: 1 ==============================");
  console.log("Об'єкт: Book", Book);
  console.log("Прототип Об'єкту: Book", Object.getPrototypeOf(Book));
  Book.read();
}

// Виводимо в консоль Об'єкт: Book

// Виводимо в консоль прототип Об'єкту: Book

// Викликаємо функцію read об'єкту Book

// 2. Наслідування від базового об'єкту Book

/*
 * Об'єкт: Novel
 * Властивості та функції наслідуються від об'єкта Book
 * Додаємо нову властивість
 *  | Властивість | Значення |
 *  |-------------|----------|
 *  | genre       | "Новела" |
 */

// Створюємо об'єкт Novel, наслідуємо властивості і функції від об'єкта Book

// Додаємо властивість genre
{
  const Book = {
    title: "Загальна Книга",
    author: "Анонім",
    pages: 0,
    read: function () {
      console.log(`Ви читаєте ${this.title} від ${this.author}`);
    },
  };
  const Novel = Object.create(Book);
  Novel.genre = "Новела";

  console.log("Завдання: 2 ==============================");
  console.log("Об'єкт: Novel", Novel);
  console.log("Прототип Об'єкту: Novel", Object.getPrototypeOf(Novel));
}

// Виводимо в консоль Об'єкт: Novel

// Виводимо в консоль прототип Об'єкту: Novel

// 3. Створення нового об'єкту та зміна його прототипу

/*
 * Об'єкт: Biography
 * Властивості:
 * --------------------------------------
 * | Властивість | Значення             |
 * |-------------|----------------------|
 * | title       | "Загальна Біографія" |
 * | author      | "Біограф"            |
 * | pages       | 200                  |
 */

// Створюємо об'єкт Biography

// Змінемо прототип об'єкта Biography на Novel
{
  const Book = {
    title: "Загальна Книга",
    author: "Анонім",
    pages: 0,
    read: function () {
      console.log(`Ви читаєте ${this.title} від ${this.author}`);
    },
  };
  const Novel = Object.create(Book);

  Novel.genre = "Новела";
  const Biography = Object.create(Novel);
  Object.setPrototypeOf(Biography, Novel);

  Biography.title = "Загальна Біографія";
  Biography.author = "Біограф";
  Biography.pages = 200;

  console.log("Завдання: 3 ==============================");
  console.log("Об'єкт: Biography", Biography);

  console.log(
    "Novel є прототипом для Biography:",
    Object.getPrototypeOf(Biography) === Novel
  );
}
// Виводимо в консоль Об'єкт: Biography

// Перевіримо чи являється Novel прототипом Biography та виведемо в консоль

// 4. Інкапсуляція властивості та додання властивості
/*
 * Об'єкт: ScienceBook
 * Властивості та функції наслідуються від об'єкта Book
 * Також тут використовується інкапсуляція для створення властивості 'info', яка не може бути змінена напряму, а лише змінюється за допомогю гетера
 */

// Створюємо ScienceBook, наслідуємо властивості і функції від об'єкта Book

// Додаємо властивість 'info' за допомогою Object.defineProperty
// Зробимо щоб 'info' не можно було видалити або змінити, перевіримо і спробуємо присвоїти ій будь яке значення (це потрібно робити ззовні defineProperty),
// Отримаємо помилку Cannot assign to read only property 'info' of object '#<Object>'

// Далі створюємо сетер який присвоє властивості info значення яке отримує при виклику, помилку більше не отримуємо але при спробі вивести значення info отримуємо undefined

// Створимо гетер який буде нам повертати рядок: Про книгу <title>: <info>
// тепер все виводить коректно

// Заповнюємо об'єкт
// | Властивість | Значення             |
// |-------------|----------------------|
// | title       | "Фізика 101"         |
// | author      | "Альберт Ейнштейн"   |
// | info        | написана в 1915 році |

const Book = {
  title: "Загальна Книга",
  author: "Анонім",
  pages: 0,
  read: function () {
    console.log(`Ви читаєте ${this.title} від ${this.author}`);
  },
};

const ScienceBook = Object.create(Book);
Object.defineProperty(ScienceBook, "info", {
  value: "Публікація 1915 року",
  writable: true,
  configurable: false,
});
Object.defineProperty(ScienceBook, "setInfo", {
  set: function (newValue) {
    this.info = newValue;
  },
});
Object.defineProperty(ScienceBook, "getInfo", {
  get: function () {
    return `Про книгу ${this.title}: ${this.info}`;
  },
});
ScienceBook.title = "Фізика 101";
ScienceBook.author = "Альберт Ейнштейн";

console.log("Завдання: 4 ==============================");
console.log("Властивість 'info':", ScienceBook.info);
console.log(
  "Налаштування властивості 'info':",
  Object.getOwnPropertyDescriptor(ScienceBook, "info")
);
ScienceBook.setInfo = "Нове значення info";
console.log("Властивість 'info' після зміни:", ScienceBook.info);

console.log("Завдання: 5 ==============================");
console.log("Інформація про книгу:", ScienceBook.getInfo);

// 6. Абстракція: створення об'єкта з загальними властивостями
/*
 * Об'єкт: Media
 * Властивості:
 * --------------
 * | Властивість | Значення           |
 * |-------------|--------------------|
 * | format      | "Загальний Формат" |
 * | length      | 0                  |
 *
 * Функції:
 * ---------------------------------------------------------------------------------------------------------------
 * | Функція | Опис                                                                                              |
 * |---------|---------------------------------------------------------------------------------------------------|
 * | play()  | Виводить повідомлення "Зараз відтворюється медіа у форматі <format> з тривалістю <length> секунд" |
 */

// Створюємо об'єкт Media

/*
 * Об'єкт: Song
 * Властивості та функції наслідуються від об'єкта Media
 * Додаткові властивості: artist, title
 */

// Створюємо об'єкт Song, наслідуємо властивості і функції від об'єкта Media

// Встановлюємо додаткові властивості
// | Властивість | Значення               |
// |-------------|------------------------|
// | artist      | "Загальний Виконавець" |
// | title       | "Загальна Пісня"       |

{
  const Media = {
    format: "Загальний Формат",
    length: 0,
    play() {
      console.log(
        `Зараз відтворюється медіа у форматі ${this.format} з тривалістю ${this.length} секунд`
      );
    },
  };
  const Song = Object.create(Media);

  Song.artist = "Загальний Виконавець";
  Song.title = "Загальна Пісня";

  console.log("Завдання: 6 ==============================");

  Song.play();
}
// Викликаємо функцію play об'єкту Song
